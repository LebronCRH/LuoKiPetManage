
@{
    ViewData["Title"] = "Index";
    Layout = null;
}

<title>课堂知识文章管理</title>

<div class="layui-card layadmin-header">
    <div class="layui-breadcrumb" lay-filter="breadcrumb">
        <a lay-href="">主页</a>
        <a><cite>文章管理</cite></a>
        <a><cite>课堂知识文章管理</cite></a>
    </div>
</div>

<style>
    /* 这段样式只是用于演示 */

</style>


<div class="layui-fluid" id="LAY-picManage-poster">

    <div class="layui-card">
        <div class="layui-tab-content">
            <div class="layui-btn-group demoTable lay-mb15">
                <div class="layui-form layui-card-header layuiadmin-card-header-auto" lay-filter="layadmin-useradmin-formlist">
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">文章标题</label>
                            <div class="layui-input-block">
                                <input type="text" name="ArticleTitle" id="ArticleTitle" placeholder="请输入文章标题" autocomplete="off" class="layui-input">
                            </div>
                        </div>
                        <div class="layui-inline">
                            <label class="layui-form-label">文章类型</label>
                            <div class="layui-input-block">
                                <select name="ArticleCategory" id="ArticleCategory">
                                    <option value="">请选择</option>
                                    <option value="3">疾病</option>
                                    <option value="4">养护</option>
                                    <option value="5">选购</option>
                                    <option value="6">产品</option>
                                </select>
                            </div>
                        </div>
                        <div class="layui-inline">
                            <label class="layui-form-label">日期</label>
                            <div class="layui-input-block">
                                <input type="text" class="layui-input" id="PublishTime" name="PublishTime" placeholder=" 请选择发布时间 ">
                            </div>
                        </div>
                        <div class="layui-inline">
                            <label class="layui-form-label">用户类型</label>
                            <div class="layui-input-block">
                                <select name="UserCate" id="UserCate">
                                    <option value="">请选择</option>
                                    <option value="0">普通用户</option>
                                    <option value="1">管理员</option>
                                </select>
                            </div>
                        </div>
                        <div class="layui-inline">
                            <button class="layui-btn layuiadmin-btn-admin" lay-submit lay-filter="LAY-user-back-search" data-type="serach">
                                <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="layui-card-body">
                    <div style="padding-bottom: 10px;">
                        <button class="layui-btn layui-btn-danger" data-type="batchdel"><i class="layui-icon">&#xe640;</i>删除</button>
                        <button class="layui-btn layui-btn-normal" data-type="add"><i class="layui-icon">&#xe654;</i>添加</button>
                    </div>
                    <table id="LAY-petArticleManage-poster-all" lay-filter="LAY-petArticleManage-poster-all"></table>
                </div>
            </div>

        </div>
    </div>

    <!--私有样式-->
    <style>
        .viewInfo {
            padding: 30px;
            font-size: 14px;
            color: #666;
        }

            .viewInfo li {
                margin-bottom: 15px;
            }

                .viewInfo li span {
                    display: inline-block;
                    width: 15%;
                    text-align: right;
                    margin-right: 15px;
                    font-weight: bold;
                }
        /*设置单元格高度，设置文本溢出时自动换行*/
        #LAY-picManage-poster .layui-table-body .layui-table-cell {
            height: 100px;
            line-height: 100px;
            white-space: normal;
        }
    </style>
    <script>
    layui.use(['admin', 'table', 'util', 'layer', 'form', 'laydate', 'laytpl'], function () {
        var $ = layui.$
            , admin = layui.admin
            , element = layui.element
            , layer = layui.layer
            , table = layui.table
            , form = layui.form
            , laydate = layui.laydate
            , laytpl = layui.laytpl;
        var articletitle = $("#ArticleTitle"), articlecategory = $("#ArticleCategory"), articledate = $("#PublishTime"), articleismanage = $("#UserCate");
        //日期范围
        laydate.render({
            elem: '#PublishTime'
            ,range: true
        });
        laydate.render({
            elem: '#test2'
            ,range: true
        });
        element.render();
        form.render(null, 'layadmin-useradmin-formlist');
        //缩略图模板
        var tplImg = function (d) {
            console.log(d);
            return '<img src="http://localhost:8085' + d.photo + '" style="height: 80px" >';
        };
        //是否启用模板
        var tplStatus=function (d) {
            console.log(d.status);
            return '<input type="checkbox" name="status" lay-skin="switch" lay-text="是|否" checked="'+d.status+'">';
        };
        var tplIsManageStatus = function (d) {
            if (d.isManager > 0) {
                return '<input type="checkbox" name="status" lay-skin="switch" lay-text="是|否" checked="true">';
            }
            else {
                return '<input type="checkbox" name="status" lay-skin="switch" lay-text="是|否">';
            }
        };
        var tplIsHotStatus = function (d) {
            if (d.isHot > 0) {
                return '<input type="checkbox" name="status" lay-skin="switch" lay-text="是|否" checked="true">';
            }
            else {
                return '<input type="checkbox" name="status" lay-skin="switch" lay-text="是|否">';
            }
        };
        var tplAarticlecategory = function (d) {
            if (d.articleCategoryId === 3) return '<div>疾病</div>';
            else if (d.articleCategoryId === 4) return '<div>养护</div>';
            else if (d.articleCategoryId === 5) return '<div>选购</div>';
            else if (d.articleCategoryId === 6) return '<div>产品</div>';
        };
        var tplTimeFormat = function (d) {
            return '<div>' + d.publishTime.replace("T"," ")+'</div>';
        };


        // 操作内容模板
        var tplOperate = function (d) {
            return '<div class="opetate">' +
                '<button class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail" lay-filter="test1">查看</button>' +
                '<button class="layui-btn layui-btn-xs" lay-event="edit">编辑</button>' +
                '<button class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</button>' +
                '</div>';

        };


        //全部消息
        table.render({
            elem: '#LAY-petArticleManage-poster-all'
            , url: '/PetArticleManage/GetAllClassArticleInfo' //模拟接口
            , cellMinWidth: 60 //全局定义常规单元格的最小宽度
            , page: true // 开启分页
            , cols: [[ // 表头
                { type: 'checkbox'}
                // , {type: 'numbers', title: '#'}
                , { field: 'articleTitle', title: '文章标题', templet: '<div>{{d.articleTitle}}</div>', align: 'center'}
                , { field: 'photo', title: '缩略图', templet: tplImg, align: 'center'}
                , { field: 'articleId', title: '文章ID', templet: '<div>{{d.articleId}}</div>', align: 'center' }
                , { field: 'introduce', title: '基本信息', templet: '<div>{{d.introduce}}</div>', align: 'center' }
                , { field: 'createUserId', title: '发布用户', templet: '<div>{{d.content}}</div>' , align: 'center'}
                , { field: 'articleCategoryId', title: '文章类型', templet: tplAarticlecategory, align: 'center'}
                , { field: 'publishTime', title: '发布时间', templet: tplTimeFormat, width: 200, align: 'center' }
                , { field: 'browserNum', title: '浏览数量', templet: '<div>{{d.browserNum}}</div>', align: 'center', sort: true }
                , { field: 'isManager', title: '是否管理员', templet: tplIsManageStatus, align: 'center' }
                , { field: 'isHot', title: '是否热门', templet: tplIsHotStatus, align: 'center' }
                , {field: 'operate', title: '操作', templet: tplOperate,width:180,align:'center'}
            ]]
            , skin: 'line'
            , done: function (res, curr, count) {
                //无论是异步请求数据，还是直接赋值数据，都会触发该回调。可以利用该回调做一些表格以外元素的渲染。
                //如果是异步请求数据方式，res即为你接口返回的信息。
                //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                console.log(res);

                //得到当前页码
                console.log(curr);

                //得到数据总量
                console.log(count);
            }
        });

        //监听单元格编辑——方法二
        table.on('edit(LAY-petArticleManage-poster-all)', function (obj) {
            var value = obj.value //得到修改后的值
                , data = obj.data //得到所在行所有键值
                , field = obj.field; //得到字段
            layer.msg('[ID: ' + data.id + '] ' + field + ' 字段更改为：' + value);
        });

        table.on('tool(LAY-petArticleManage-poster-all)', function (obj) {
            layui.updateitem = function (item) {
                obj.update(JSON.parse(item));
            };
            var data = obj.data;
            if (obj.event === 'detail') {
                layer.open({
                    type: 2,
                    content: 'http://localhost:8080/PetCategory/ManageDetails/' + data.petCategoryId,
                    area: ['1300px', '800px'],
                    fixed: false,
                    maxmin: true,
                });
                console.log(obj);
                console.log(JSON.stringify(data));
                console.log(data.operate);
            }
            else if (obj.event === 'del') {
                layer.confirm('真的删除行么', function (index) {
                    obj.del();
                    layer.close(index);
                });
            }
            else if (obj.event === 'edit') { // 编辑方法一
                layer.open({
                    type: 2,
                    content: 'http://localhost:8080/PetCategory/ManageEditPetCategory/' + data.petCategoryId,
                    area: ['1400px', '800px'],
                    fixed: false,
                    maxmin: true,
                });
            }
            else if (obj.event === 'setSign') { // 编辑方法三
                layer.prompt({
                    formType: 2
                    , title: '编辑 [' + data.id + '] 的所属平台'
                    , value: data.platform
                }, function (value, index) {
                    layer.close(index);

                    //这里一般是发送修改的Ajax请求

                    //同步更新表格和缓存对应的值
                    obj.update({
                        platform: value
                    });
                });
            }
        }); // 操作

        var active = {
            batchdel: function(){
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all')
                    ,checkData = checkStatus.data; //得到选中的数据
                if(checkData.length === 0){
                    return layer.msg('请选择数据');
                }

                layer.prompt({
                    formType: 1
                    ,title: '敏感操作，请验证口令'
                }, function(value, index){
                    layer.close(index);

                    layer.confirm('确定删除吗？', function(index) {

                        //执行 Ajax 后重载
                        /*
                         admin.req({
                         url: 'xxx'
                         //,……
                         });
                         */
                        table.reload('LAY-user-manage');
                        layer.msg('已删除');
                    });
                });
            },
            getCheckData: function () { //获取选中数据
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all')
                    , data = checkStatus.data;
                active.getId(data)

                layer.alert(JSON.stringify(data));
            }
            , getId: function (data) {
                var idArr = [];
                for (var i = 0; i < data.length; i++) {
                    console.log(data[i].id)
                    idArr.push(data[i].id)
                }
                console.log(idArr)
            }
            , getCheckLength: function () { //获取选中数目
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all')
                    , data = checkStatus.data;
                layer.msg('选中了：' + data.length + ' 个');
            }
            , isAll: function () { //验证是否全选
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all');
                layer.msg(checkStatus.isAll ? '全选' : '未全选');
            }
            , add: function () { // 增加一条列表
                layer.open({
                    title: '新增',
                    type: 2,
                    //skin: 'layui-layer-rim',
                    shadeClose: false,
                    fixed: false,
                    maxmin: true,
                    content: 'http://localhost:8080/PetCategory/ManageCreate/',
                    area: ['1400px', '800px'],
                });

            }
            , serach: function () {
                console.log(articletitle.val(), articlecategory.val(), articledate.val(), articleismanage.val());
                table.render({
                    elem: '#LAY-petArticleManage-poster-all'
                    , url: '/PetArticleManage/GetSerachClassArticleInfo' //模拟接口
                    , where: { title: articletitle.val(), category: articlecategory.val(), datetime: articledate.val(), ismanage: articleismanage.val() }
                    , cellMinWidth: 60 //全局定义常规单元格的最小宽度
                    , page: true // 开启分页
                    , cols: [[ // 表头
                        { type: 'checkbox' }
                        // , {type: 'numbers', title: '#'}
                        , { field: 'articleTitle', title: '文章标题', templet: '<div>{{d.articleTitle}}</div>', align: 'center' }
                        , { field: 'photo', title: '缩略图', templet: tplImg, align: 'center' }
                        , { field: 'articleId', title: '文章ID', templet: '<div>{{d.articleId}}</div>', align: 'center' }
                        , { field: 'introduce', title: '基本信息', templet: '<div>{{d.introduce}}</div>', align: 'center' }
                        , { field: 'createUserId', title: '发布用户', templet: '<div>{{d.content}}</div>', align: 'center' }
                        , { field: 'articleCategoryId', title: '文章类型', templet: tplAarticlecategory, align: 'center' }
                        , { field: 'publishTime', title: '发布时间', templet: tplTimeFormat, width: 200, align: 'center' }
                        , { field: 'browserNum', title: '浏览数量', templet: '<div>{{d.browserNum}}</div>', align: 'center', sort: true }
                        , { field: 'isManager', title: '是否管理员', templet: tplIsManageStatus, align: 'center' }
                        , { field: 'isHot', title: '是否热门', templet: tplIsHotStatus, align: 'center' }
                        , { field: 'operate', title: '操作', templet: tplOperate, width: 180, align: 'center' }
                    ]]
                    , skin: 'line'
                    , done: function (res, curr, count) {
                        //无论是异步请求数据，还是直接赋值数据，都会触发该回调。可以利用该回调做一些表格以外元素的渲染。
                        //如果是异步请求数据方式，res即为你接口返回的信息。
                        //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                        console.log(res);

                        //得到当前页码
                        console.log(curr);

                        //得到数据总量
                        console.log(count);
                    }
                });
            }
        };

        form.on('submit(component-form-demo1)', function (data) {
            console.log(data)
            layer.alert(JSON.stringify(data.field), {
                title: '最终的提交信息'
            })
            return false;
        });


        $('.layui-fluid .layui-btn').on('click', function () {
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });
    });
    </script>


