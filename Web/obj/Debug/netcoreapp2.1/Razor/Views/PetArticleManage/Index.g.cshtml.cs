#pragma checksum "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\PetArticleManage\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "826bf49f8710c6a1e4804d6ac4c9cb2e35a0b170"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PetArticleManage_Index), @"mvc.1.0.view", @"/Views/PetArticleManage/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PetArticleManage/Index.cshtml", typeof(AspNetCore.Views_PetArticleManage_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\_ViewImports.cshtml"
using Web;

#line default
#line hidden
#line 2 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\_ViewImports.cshtml"
using Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"826bf49f8710c6a1e4804d6ac4c9cb2e35a0b170", @"/Views/PetArticleManage/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"74b0619e1a302f0598271da1847e697c39d57b88", @"/Views/_ViewImports.cshtml")]
    public class Views_PetArticleManage_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "6", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\PetArticleManage\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = null;

#line default
#line hidden
            BeginContext(63, 1387, true);
            WriteLiteral(@"
<title>课堂知识文章管理</title>

<div class=""layui-card layadmin-header"">
    <div class=""layui-breadcrumb"" lay-filter=""breadcrumb"">
        <a lay-href="""">主页</a>
        <a><cite>文章管理</cite></a>
        <a><cite>课堂知识文章管理</cite></a>
    </div>
</div>

<style>
    /* 这段样式只是用于演示 */

</style>


<div class=""layui-fluid"" id=""LAY-picManage-poster"">

    <div class=""layui-card"">
        <div class=""layui-tab-content"">
            <div class=""layui-btn-group demoTable lay-mb15"">
                <div class=""layui-form layui-card-header layuiadmin-card-header-auto"" lay-filter=""layadmin-useradmin-formlist"">
                    <div class=""layui-form-item"">
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">文章标题</label>
                            <div class=""layui-input-block"">
                                <input type=""text"" name=""ArticleTitle"" id=""ArticleTitle"" placeholder=""请输入文章标题"" autocomplete=""off"" class=""layui-input"">
              ");
            WriteLiteral(@"              </div>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">文章类型</label>
                            <div class=""layui-input-block"">
                                <select name=""ArticleCategory"" id=""ArticleCategory"">
                                    ");
            EndContext();
            BeginContext(1450, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "295c622b82124611aecf6e1068474d33", async() => {
                BeginContext(1467, 3, true);
                WriteLiteral("请选择");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1479, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1517, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "67c53d08f3284074b3262b56734d8edc", async() => {
                BeginContext(1535, 2, true);
                WriteLiteral("疾病");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1546, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1584, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6b9439590d124403ab7da31519ca6d99", async() => {
                BeginContext(1602, 2, true);
                WriteLiteral("养护");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1613, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1651, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "104465f23c40464b9fec17d7ec190faf", async() => {
                BeginContext(1669, 2, true);
                WriteLiteral("选购");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1680, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1718, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54c1e71de83a4fe7b83e33874f42a3f2", async() => {
                BeginContext(1736, 2, true);
                WriteLiteral("产品");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1747, 794, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">日期</label>
                            <div class=""layui-input-block"">
                                <input type=""text"" class=""layui-input"" id=""PublishTime"" name=""PublishTime"" placeholder="" 请选择发布时间 "">
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">用户类型</label>
                            <div class=""layui-input-block"">
                                <select name=""UserCate"" id=""UserCate"">
                                    ");
            EndContext();
            BeginContext(2541, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ec7585c9bc7940c5806f10636e3e482d", async() => {
                BeginContext(2558, 3, true);
                WriteLiteral("请选择");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2570, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2608, 31, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "94d9242324d14a2d880aea40fe152bf9", async() => {
                BeginContext(2626, 4, true);
                WriteLiteral("普通用户");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2639, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2677, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b046eea8e01b4244bf70957a1f469a8a", async() => {
                BeginContext(2695, 3, true);
                WriteLiteral("管理员");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2707, 14536, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <button class=""layui-btn layuiadmin-btn-admin"" lay-submit lay-filter=""LAY-user-back-search"" data-type=""serach"">
                                <i class=""layui-icon layui-icon-search layuiadmin-button-btn""></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class=""layui-card-body"">
                    <div style=""padding-bottom: 10px;"">
                        <button class=""layui-btn layui-btn-danger"" data-type=""batchdel""><i class=""layui-icon"">&#xe640;</i>删除</button>
                        <button class=""layui-btn layui-btn-normal"" data-type=""add""><i class=""layui-icon"">&#xe654;</i>添加</button>
                    </div>
                    <table id=""LAY-petArticleManage-poster-all"" lay-filter=""LAY-petArticleManage-p");
            WriteLiteral(@"oster-all""></table>
                </div>
            </div>

        </div>
    </div>

    <!--私有样式-->
    <style>
        .viewInfo {
            padding: 30px;
            font-size: 14px;
            color: #666;
        }

            .viewInfo li {
                margin-bottom: 15px;
            }

                .viewInfo li span {
                    display: inline-block;
                    width: 15%;
                    text-align: right;
                    margin-right: 15px;
                    font-weight: bold;
                }
        /*设置单元格高度，设置文本溢出时自动换行*/
        #LAY-picManage-poster .layui-table-body .layui-table-cell {
            height: 100px;
            line-height: 100px;
            white-space: normal;
        }
    </style>
    <script>
    layui.use(['admin', 'table', 'util', 'layer', 'form', 'laydate', 'laytpl'], function () {
        var $ = layui.$
            , admin = layui.admin
            , element = layui.element
            ");
            WriteLiteral(@", layer = layui.layer
            , table = layui.table
            , form = layui.form
            , laydate = layui.laydate
            , laytpl = layui.laytpl;
        var articletitle = $(""#ArticleTitle""), articlecategory = $(""#ArticleCategory""), articledate = $(""#PublishTime""), articleismanage = $(""#UserCate"");
        //日期范围
        laydate.render({
            elem: '#PublishTime'
            ,range: true
        });
        laydate.render({
            elem: '#test2'
            ,range: true
        });
        element.render();
        form.render(null, 'layadmin-useradmin-formlist');
        //缩略图模板
        var tplImg = function (d) {
            console.log(d);
            return '<img src=""http://localhost:8085' + d.photo + '"" style=""height: 80px"" >';
        };
        //是否启用模板
        var tplStatus=function (d) {
            console.log(d.status);
            return '<input type=""checkbox"" name=""status"" lay-skin=""switch"" lay-text=""是|否"" checked=""'+d.status+'"">';
        ");
            WriteLiteral(@"};
        var tplIsManageStatus = function (d) {
            if (d.isManager > 0) {
                return '<input type=""checkbox"" name=""status"" lay-skin=""switch"" lay-text=""是|否"" checked=""true"">';
            }
            else {
                return '<input type=""checkbox"" name=""status"" lay-skin=""switch"" lay-text=""是|否"">';
            }
        };
        var tplIsHotStatus = function (d) {
            if (d.isHot > 0) {
                return '<input type=""checkbox"" name=""status"" lay-skin=""switch"" lay-text=""是|否"" checked=""true"">';
            }
            else {
                return '<input type=""checkbox"" name=""status"" lay-skin=""switch"" lay-text=""是|否"">';
            }
        };
        var tplAarticlecategory = function (d) {
            if (d.articleCategoryId === 3) return '<div>疾病</div>';
            else if (d.articleCategoryId === 4) return '<div>养护</div>';
            else if (d.articleCategoryId === 5) return '<div>选购</div>';
            else if (d.articleCategoryId === 6) r");
            WriteLiteral(@"eturn '<div>产品</div>';
        };
        var tplTimeFormat = function (d) {
            return '<div>' + d.publishTime.replace(""T"","" "")+'</div>';
        };


        // 操作内容模板
        var tplOperate = function (d) {
            return '<div class=""opetate"">' +
                '<button class=""layui-btn layui-btn-primary layui-btn-xs"" lay-event=""detail"" lay-filter=""test1"">查看</button>' +
                '<button class=""layui-btn layui-btn-xs"" lay-event=""edit"">编辑</button>' +
                '<button class=""layui-btn layui-btn-danger layui-btn-xs"" lay-event=""del"">删除</button>' +
                '</div>';

        };


        //全部消息
        table.render({
            elem: '#LAY-petArticleManage-poster-all'
            , url: '/PetArticleManage/GetAllClassArticleInfo' //模拟接口
            , cellMinWidth: 60 //全局定义常规单元格的最小宽度
            , page: true // 开启分页
            , cols: [[ // 表头
                { type: 'checkbox'}
                // , {type: 'numbers', title: '#'}
                , ");
            WriteLiteral(@"{ field: 'articleTitle', title: '文章标题', templet: '<div>{{d.articleTitle}}</div>', align: 'center'}
                , { field: 'photo', title: '缩略图', templet: tplImg, align: 'center'}
                , { field: 'articleId', title: '文章ID', templet: '<div>{{d.articleId}}</div>', align: 'center' }
                , { field: 'introduce', title: '基本信息', templet: '<div>{{d.introduce}}</div>', align: 'center' }
                , { field: 'createUserId', title: '发布用户', templet: '<div>{{d.content}}</div>' , align: 'center'}
                , { field: 'articleCategoryId', title: '文章类型', templet: tplAarticlecategory, align: 'center'}
                , { field: 'publishTime', title: '发布时间', templet: tplTimeFormat, width: 200, align: 'center' }
                , { field: 'browserNum', title: '浏览数量', templet: '<div>{{d.browserNum}}</div>', align: 'center', sort: true }
                , { field: 'isManager', title: '是否管理员', templet: tplIsManageStatus, align: 'center' }
                , { field: 'isHot', title: '是否");
            WriteLiteral(@"热门', templet: tplIsHotStatus, align: 'center' }
                , {field: 'operate', title: '操作', templet: tplOperate,width:180,align:'center'}
            ]]
            , skin: 'line'
            , done: function (res, curr, count) {
                //无论是异步请求数据，还是直接赋值数据，都会触发该回调。可以利用该回调做一些表格以外元素的渲染。
                //如果是异步请求数据方式，res即为你接口返回的信息。
                //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                console.log(res);

                //得到当前页码
                console.log(curr);

                //得到数据总量
                console.log(count);
            }
        });

        //监听单元格编辑——方法二
        table.on('edit(LAY-petArticleManage-poster-all)', function (obj) {
            var value = obj.value //得到修改后的值
                , data = obj.data //得到所在行所有键值
                , field = obj.field; //得到字段
            layer.msg('[ID: ' + data.id + '] ' + field + ' 字段更改为：' + value);
        });

        table.on('tool(LAY-petArticleManage-poster-all)', functio");
            WriteLiteral(@"n (obj) {
            layui.updateitem = function (item) {
                obj.update(JSON.parse(item));
            };
            var data = obj.data;
            if (obj.event === 'detail') {
                layer.open({
                    type: 2,
                    content: 'http://localhost:8080/PetCategory/ManageDetails/' + data.petCategoryId,
                    area: ['1300px', '800px'],
                    fixed: false,
                    maxmin: true,
                });
                console.log(obj);
                console.log(JSON.stringify(data));
                console.log(data.operate);
            }
            else if (obj.event === 'del') {
                layer.confirm('真的删除行么', function (index) {
                    obj.del();
                    layer.close(index);
                });
            }
            else if (obj.event === 'edit') { // 编辑方法一
                layer.open({
                    type: 2,
                    content: 'http://localhost");
            WriteLiteral(@":8080/PetCategory/ManageEditPetCategory/' + data.petCategoryId,
                    area: ['1400px', '800px'],
                    fixed: false,
                    maxmin: true,
                });
            }
            else if (obj.event === 'setSign') { // 编辑方法三
                layer.prompt({
                    formType: 2
                    , title: '编辑 [' + data.id + '] 的所属平台'
                    , value: data.platform
                }, function (value, index) {
                    layer.close(index);

                    //这里一般是发送修改的Ajax请求

                    //同步更新表格和缓存对应的值
                    obj.update({
                        platform: value
                    });
                });
            }
        }); // 操作

        var active = {
            batchdel: function(){
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all')
                    ,checkData = checkStatus.data; //得到选中的数据
                if(checkData.length === 0){
");
            WriteLiteral(@"                    return layer.msg('请选择数据');
                }

                layer.prompt({
                    formType: 1
                    ,title: '敏感操作，请验证口令'
                }, function(value, index){
                    layer.close(index);

                    layer.confirm('确定删除吗？', function(index) {

                        //执行 Ajax 后重载
                        /*
                         admin.req({
                         url: 'xxx'
                         //,……
                         });
                         */
                        table.reload('LAY-user-manage');
                        layer.msg('已删除');
                    });
                });
            },
            getCheckData: function () { //获取选中数据
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all')
                    , data = checkStatus.data;
                active.getId(data)

                layer.alert(JSON.stringify(data));
            }
         ");
            WriteLiteral(@"   , getId: function (data) {
                var idArr = [];
                for (var i = 0; i < data.length; i++) {
                    console.log(data[i].id)
                    idArr.push(data[i].id)
                }
                console.log(idArr)
            }
            , getCheckLength: function () { //获取选中数目
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all')
                    , data = checkStatus.data;
                layer.msg('选中了：' + data.length + ' 个');
            }
            , isAll: function () { //验证是否全选
                var checkStatus = table.checkStatus('LAY-petArticleManage-poster-all');
                layer.msg(checkStatus.isAll ? '全选' : '未全选');
            }
            , add: function () { // 增加一条列表
                layer.open({
                    title: '新增',
                    type: 2,
                    //skin: 'layui-layer-rim',
                    shadeClose: false,
                    fixed: false,
          ");
            WriteLiteral(@"          maxmin: true,
                    content: 'http://localhost:8080/PetCategory/ManageCreate/',
                    area: ['1400px', '800px'],
                });

            }
            , serach: function () {
                console.log(articletitle.val(), articlecategory.val(), articledate.val(), articleismanage.val());
                table.render({
                    elem: '#LAY-petArticleManage-poster-all'
                    , url: '/PetArticleManage/GetSerachClassArticleInfo' //模拟接口
                    , where: { title: articletitle.val(), category: articlecategory.val(), datetime: articledate.val(), ismanage: articleismanage.val() }
                    , cellMinWidth: 60 //全局定义常规单元格的最小宽度
                    , page: true // 开启分页
                    , cols: [[ // 表头
                        { type: 'checkbox' }
                        // , {type: 'numbers', title: '#'}
                        , { field: 'articleTitle', title: '文章标题', templet: '<div>{{d.articleTitle}}</div>',");
            WriteLiteral(@" align: 'center' }
                        , { field: 'photo', title: '缩略图', templet: tplImg, align: 'center' }
                        , { field: 'articleId', title: '文章ID', templet: '<div>{{d.articleId}}</div>', align: 'center' }
                        , { field: 'introduce', title: '基本信息', templet: '<div>{{d.introduce}}</div>', align: 'center' }
                        , { field: 'createUserId', title: '发布用户', templet: '<div>{{d.content}}</div>', align: 'center' }
                        , { field: 'articleCategoryId', title: '文章类型', templet: tplAarticlecategory, align: 'center' }
                        , { field: 'publishTime', title: '发布时间', templet: tplTimeFormat, width: 200, align: 'center' }
                        , { field: 'browserNum', title: '浏览数量', templet: '<div>{{d.browserNum}}</div>', align: 'center', sort: true }
                        , { field: 'isManager', title: '是否管理员', templet: tplIsManageStatus, align: 'center' }
                        , { field: 'isHot', title: '是否热门', t");
            WriteLiteral(@"emplet: tplIsHotStatus, align: 'center' }
                        , { field: 'operate', title: '操作', templet: tplOperate, width: 180, align: 'center' }
                    ]]
                    , skin: 'line'
                    , done: function (res, curr, count) {
                        //无论是异步请求数据，还是直接赋值数据，都会触发该回调。可以利用该回调做一些表格以外元素的渲染。
                        //如果是异步请求数据方式，res即为你接口返回的信息。
                        //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                        console.log(res);

                        //得到当前页码
                        console.log(curr);

                        //得到数据总量
                        console.log(count);
                    }
                });
            }
        };

        form.on('submit(component-form-demo1)', function (data) {
            console.log(data)
            layer.alert(JSON.stringify(data.field), {
                title: '最终的提交信息'
            })
            return false;
        });


        $");
            WriteLiteral("(\'.layui-fluid .layui-btn\').on(\'click\', function () {\r\n            var type = $(this).data(\'type\');\r\n            active[type] ? active[type].call(this) : \'\';\r\n        });\r\n    });\r\n    </script>\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
