#pragma checksum "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\PetCategoryManage\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "42f52e89293bee133e592b425ccba1ed958e12a0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PetCategoryManage_Index), @"mvc.1.0.view", @"/Views/PetCategoryManage/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PetCategoryManage/Index.cshtml", typeof(AspNetCore.Views_PetCategoryManage_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\_ViewImports.cshtml"
using Web;

#line default
#line hidden
#line 2 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\_ViewImports.cshtml"
using Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"42f52e89293bee133e592b425ccba1ed958e12a0", @"/Views/PetCategoryManage/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"74b0619e1a302f0598271da1847e697c39d57b88", @"/Views/_ViewImports.cshtml")]
    public class Views_PetCategoryManage_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "小型", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "中型", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "大型", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "无毛", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "短毛", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "长毛", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\PetCategoryManage\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = null;

#line default
#line hidden
            BeginContext(63, 1359, true);
            WriteLiteral(@"
<title>宠物管理</title>

<div class=""layui-card layadmin-header"">
    <div class=""layui-breadcrumb"" lay-filter=""breadcrumb"">
        <a lay-href="""">主页</a>
        <a><cite>图片管理</cite></a>
        <a><cite>海报管理</cite></a>
    </div>
</div>

<style>
    /* 这段样式只是用于演示 */

</style>


<div class=""layui-fluid"" id=""LAY-picManage-poster"">

    <div class=""layui-card"">
        <div class=""layui-tab-content"">
            <div class=""layui-btn-group demoTable lay-mb15"">
                <div class=""layui-form layui-card-header layuiadmin-card-header-auto"" lay-filter=""layadmin-useradmin-formlist"">
                    <div class=""layui-form-item"">
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">名称</label>
                            <div class=""layui-input-block"">
                                <input type=""text"" name=""petname"" id=""petname"" placeholder=""请输入宠物种类名称"" autocomplete=""off"" class=""layui-input"">
                            </di");
            WriteLiteral(@"v>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">种类</label>
                            <div class=""layui-input-block"">
                                <select name=""petcategory"" id=""petcategory"">
                                    ");
            EndContext();
            BeginContext(1422, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e14c2a9d72ff41cebaacde33478584da", async() => {
                BeginContext(1439, 3, true);
                WriteLiteral("请选择");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1451, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1489, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "38f2db81846b4e40a9eddd2da2546c3b", async() => {
                BeginContext(1507, 2, true);
                WriteLiteral("狗类");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1518, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1556, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9ede72327caf45089dd010af4ad3bd8f", async() => {
                BeginContext(1574, 2, true);
                WriteLiteral("猫类");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1585, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1623, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "31601fb9b0e44cdfa7a020fa918eff5b", async() => {
                BeginContext(1641, 2, true);
                WriteLiteral("兔类");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1652, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1690, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "891ff6c8638640fca01ba21805351749", async() => {
                BeginContext(1708, 2, true);
                WriteLiteral("鼠类");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1719, 400, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">体型</label>
                            <div class=""layui-input-block"">
                                <select name=""shape"" id=""shape"">
                                    ");
            EndContext();
            BeginContext(2119, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a88e723df5c6443bbeffaa920c9d8e8f", async() => {
                BeginContext(2136, 3, true);
                WriteLiteral("请选择");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2148, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2186, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ca744c75319d416c82cf91f87fa435b0", async() => {
                BeginContext(2205, 2, true);
                WriteLiteral("小型");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2216, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2254, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2ba801b729af4f55b6a0df4521ebf4db", async() => {
                BeginContext(2273, 2, true);
                WriteLiteral("中型");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2284, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2322, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eec7bc1ba3014fd689dbcc4c5ceecffd", async() => {
                BeginContext(2341, 2, true);
                WriteLiteral("大型");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2352, 398, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">毛发</label>
                            <div class=""layui-input-block"">
                                <select name=""hair"" id=""hair"">
                                    ");
            EndContext();
            BeginContext(2750, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b81b199cb1bf40b8aa3f3d141509886e", async() => {
                BeginContext(2767, 3, true);
                WriteLiteral("请选择");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2779, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2817, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4b903aa97d184b75864c6c8150cefec1", async() => {
                BeginContext(2836, 2, true);
                WriteLiteral("无毛");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2847, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2885, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "26ca00dc786d4e5a9ab56220b5c4fb04", async() => {
                BeginContext(2904, 2, true);
                WriteLiteral("短毛");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2915, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2953, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3574a89b4d444e489b3ee551268154ad", async() => {
                BeginContext(2972, 2, true);
                WriteLiteral("长毛");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2983, 14417, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <button class=""layui-btn layuiadmin-btn-admin"" lay-submit lay-filter=""LAY-user-back-search"" data-type=""serach"">
                                <i class=""layui-icon layui-icon-search layuiadmin-button-btn""></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class=""layui-card-body"">
                    <div style=""padding-bottom: 10px;"">
                        <button class=""layui-btn layui-btn-danger"" data-type=""batchdel""><i class=""layui-icon"">&#xe640;</i>删除</button>
                        <button class=""layui-btn layui-btn-normal"" data-type=""add""><i class=""layui-icon"">&#xe654;</i>添加</button>
                    </div>
                    <table id=""LAY-picManage-poster-all"" lay-filter=""LAY-picManage-poster-all""></t");
            WriteLiteral(@"able>
                </div>
            </div>

        </div>
    </div>

    <!--查看-->
    <script type=""text/html"" id=""viewTrPostrer"">
        <ul class=""viewInfo"">
            <li>
                <span>名称：</span>{{d.title}}
            </li>
            <li>
                <span>所属平台：</span>{{d.platform}}
            </li>
            <li>
                <span>类型：</span>{{d.type}}
            </li>
            <li>
                <span>标签：</span>{{d.label}}
            </li>
            <li>
                <span>热度：</span>{{d.hot}}
            </li>
            <li>
                <span>创建时间：</span>{{layui.util.timeAgo(d.createTime)}}
            </li>
            <li>
                <span>启用时间：</span>{{layui.util.timeAgo(d.startTime)}}
            </li>
            <li>
                <span>是否启用：</span>{{d.status ? ""是"" :"" 否""}}
            </li>
        </ul>
    </script>
    <!--私有样式-->
    <style>
        .viewInfo {
            padding: 30px;
          ");
            WriteLiteral(@"  font-size: 14px;
            color: #666;
        }

            .viewInfo li {
                margin-bottom: 15px;
            }

                .viewInfo li span {
                    display: inline-block;
                    width: 15%;
                    text-align: right;
                    margin-right: 15px;
                    font-weight: bold;
                }
        /*设置单元格高度，设置文本溢出时自动换行*/
        #LAY-picManage-poster .layui-table-body .layui-table-cell {
            height: 100px;
            line-height: 100px;
            white-space: normal;
        }
    </style>
    <script>
    layui.use(['admin', 'table', 'util', 'layer', 'form', 'laydate', 'laytpl'], function () {
        var $ = layui.$
            , admin = layui.admin
            , element = layui.element
            , layer = layui.layer
            , table = layui.table
            , form = layui.form
            , laydate = layui.laydate
            , laytpl = layui.laytpl;
        //日期范围
  ");
            WriteLiteral(@"      laydate.render({
            elem: '#test1'
            ,range: true
        });
        laydate.render({
            elem: '#test2'
            ,range: true
        });
        element.render();
        var petname = $(""#petname""), petcategory = $(""#petcategory""), shape = $(""#shape""), hair = $(""#hair"");
        form.render(null, 'layadmin-useradmin-formlist');
        //缩略图模板
        var tplImg = function (d) {
            console.log(d);
            return '<img src=""http://localhost:8085' + d.petCategoryPhotos + '"" style=""height: 80px"" >';
        };
        //是否启用模板
        var tplStatus=function (d) {
            console.log(d.status);
            return '<input type=""checkbox"" name=""status"" lay-skin=""switch"" lay-text=""是|否"" checked=""'+d.status+'"">';
        };
        var tplPetcategory = function (d) {
            if (d.aniMalCategoryId === 1) return '<div>狗类</div>';
            else if (d.aniMalCategoryId === 2) return '<div>猫类</div>';
            else if (d.aniMalCategory");
            WriteLiteral(@"Id === 3) return '<div>兔类</div>';
            else if (d.aniMalCategoryId === 4) return '<div>鼠类</div>';
        };


        // 操作内容模板
        var tplOperate = function (d) {
            return '<div class=""opetate"">' +
                '<button class=""layui-btn layui-btn-primary layui-btn-xs"" lay-event=""detail"" lay-filter=""test1"">查看</button>' +
                '<button class=""layui-btn layui-btn-xs"" lay-event=""edit"">编辑</button>' +
                '<button class=""layui-btn layui-btn-danger layui-btn-xs"" lay-event=""del"">删除</button>' +
                '</div>';

        };


        //全部消息
        table.render({
            elem: '#LAY-picManage-poster-all'
            , url: '/PetCategoryManage/GetAllPetCategoryInfo' //模拟接口
            , cellMinWidth: 60 //全局定义常规单元格的最小宽度
            , page: true // 开启分页
            , cols: [[ // 表头
                { type: 'checkbox'}
                // , {type: 'numbers', title: '#'}
                , { field: 'petCategoryName', title: '宠物名称', edit: 't");
            WriteLiteral(@"ext', templet: '<div>{{d.petCategoryName}}</div>'}
                , { field: 'petCategoryPhotos', title: '缩略图', templet: tplImg}
                , { field: 'shape', title: '宠物体型', edit: 'text', templet: '<div>{{d.shape}}</div>' }
                , { field: 'enName', title: '英文名', edit: 'text', templet: '<div>{{d.enName}}</div>' }
                , { field: 'alias', title: '宠物别名', edit: 'text', templet: '<div>{{d.alias}}</div>'}
                , { field: 'origin', title: '源产地', edit: 'text', templet: '<div>{{d.origin}}</div>'}
                , { field: 'price', title: '价格', templet: '<div>{{d.price}}</div>', sort: true }
                , { field: 'weight', title: '体重', templet: '<div>{{d.weight}}</div>' }
                , { field: 'height', title: '身高', templet: '<div>{{d.height}}</div>'}
                , { field: 'Function', title: '功能', templet: '<div>{{d.function}}</div>'}
                , { field: 'hair', title: '毛发', templet: '<div>{{d.hair}}</div>'}
                , { field: 'aniMalCat");
            WriteLiteral(@"egoryId', title: '宠物种类',  templet: tplPetcategory}
                , {field: 'operate', title: '操作', templet: tplOperate,width:180,align:'center'}
            ]]
            , skin: 'line'
            , done: function (res, curr, count) {
                //无论是异步请求数据，还是直接赋值数据，都会触发该回调。可以利用该回调做一些表格以外元素的渲染。
                //如果是异步请求数据方式，res即为你接口返回的信息。
                //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                console.log(res);

                //得到当前页码
                console.log(curr);

                //得到数据总量
                console.log(count);
            }
        });

        //监听单元格编辑——方法二
        table.on('edit(LAY-picManage-poster-all)', function (obj) {
            var value = obj.value //得到修改后的值
                , data = obj.data //得到所在行所有键值
                , field = obj.field; //得到字段
            layer.msg('[ID: ' + data.id + '] ' + field + ' 字段更改为：' + value);
        });

        table.on('tool(LAY-picManage-poster-all)', function (obj) {
");
            WriteLiteral(@"            layui.updateitem = function (item) {
                obj.update(JSON.parse(item));
            };
            var data = obj.data;
            if (obj.event === 'detail') {
                layer.open({
                    type: 2,
                    content: 'http://localhost:8080/PetCategory/ManageDetails/' + data.petCategoryId,
                    area: ['1300px', '800px'],
                    fixed: false,
                    maxmin: true,
                }); 
                console.log(obj);
                console.log(JSON.stringify(data));
                console.log(data.operate);
            }
            else if (obj.event === 'del') {
                layer.confirm('真的删除行么', function (index) {
                    obj.del();
                    layer.close(index);
                });
            }
            else if (obj.event === 'edit') { // 编辑方法一
                layer.open({
                    type: 2,
                    content: 'http://localhost:8080/PetC");
            WriteLiteral(@"ategory/ManageEditPetCategory/' + data.petCategoryId,
                    area: ['1400px', '800px'],
                    fixed: false,
                    maxmin: true,
                }); 
            }
            else if (obj.event === 'setSign') { // 编辑方法三
                layer.prompt({
                    formType: 2
                    , title: '编辑 [' + data.id + '] 的所属平台'
                    , value: data.platform
                }, function (value, index) {
                    layer.close(index);

                    //这里一般是发送修改的Ajax请求

                    //同步更新表格和缓存对应的值
                    obj.update({
                        platform: value
                    });
                });
            }
        }); // 操作

        var active = {
            batchdel: function(){
                var checkStatus = table.checkStatus('LAY-picManage-poster-all')
                    ,checkData = checkStatus.data; //得到选中的数据
                if(checkData.length === 0){
                ");
            WriteLiteral(@"    return layer.msg('请选择数据');
                }

                layer.prompt({
                    formType: 1
                    ,title: '敏感操作，请验证口令'
                }, function(value, index){
                    layer.close(index);

                    layer.confirm('确定删除吗？', function(index) {

                        //执行 Ajax 后重载
                        /*
                         admin.req({
                         url: 'xxx'
                         //,……
                         });
                         */
                        table.reload('LAY-user-manage');
                        layer.msg('已删除');
                    });
                });
            },
            getCheckData: function () { //获取选中数据
                var checkStatus = table.checkStatus('LAY-picManage-poster-all')
                    , data = checkStatus.data;
                active.getId(data)

                layer.alert(JSON.stringify(data));
            }
            , getId: function (d");
            WriteLiteral(@"ata) {
                var idArr = [];
                for (var i = 0; i < data.length; i++) {
                    console.log(data[i].id)
                    idArr.push(data[i].id)
                }
                console.log(idArr)
            }
            , getCheckLength: function () { //获取选中数目
                var checkStatus = table.checkStatus('LAY-picManage-poster-all')
                    , data = checkStatus.data;
                layer.msg('选中了：' + data.length + ' 个');
            }
            , isAll: function () { //验证是否全选
                var checkStatus = table.checkStatus('LAY-picManage-poster-all');
                layer.msg(checkStatus.isAll ? '全选' : '未全选');
            }
            , add: function () { // 增加一条列表
                layer.open({
                    title: '新增',
                    type: 2,
                    //skin: 'layui-layer-rim',
                    shadeClose: false,
                    fixed: false,
                    maxmin: true,
            ");
            WriteLiteral(@"        content: 'http://localhost:8080/PetCategory/ManageCreate/',
                    area: ['1400px', '800px'],
                });

            }
            , serach: function () {
                table.render({
                    elem: '#LAY-picManage-poster-all'
                    , url: '/PetCategoryManage/GetSerachPetCategoryInfo' //模拟接口
                    , where: { name: petname.val(), category: petcategory.val(), shape: shape.val(), hair: hair.val() }
                    , cellMinWidth: 60 //全局定义常规单元格的最小宽度
                    , page: true // 开启分页
                    , cols: [[ // 表头
                        { type: 'checkbox' }
                        // , {type: 'numbers', title: '#'}
                        , { field: 'petCategoryName', title: '宠物名称', edit: 'text', templet: '<div>{{d.petCategoryName}}</div>' }
                        , { field: 'petCategoryPhotos', title: '缩略图', templet: tplImg }
                        , { field: 'shape', title: '宠物体型', edit: 'text', templet:");
            WriteLiteral(@" '<div>{{d.shape}}</div>' }
                        , { field: 'enName', title: '英文名', edit: 'text', templet: '<div>{{d.enName}}</div>' }
                        , { field: 'alias', title: '宠物别名', edit: 'text', templet: '<div>{{d.alias}}</div>' }
                        , { field: 'origin', title: '源产地', edit: 'text', templet: '<div>{{d.origin}}</div>' }
                        , { field: 'price', title: '价格', templet: '<div>{{d.price}}</div>', sort: true }
                        , { field: 'weight', title: '体重', templet: '<div>{{d.weight}}</div>' }
                        , { field: 'height', title: '身高', templet: '<div>{{d.height}}</div>' }
                        , { field: 'Function', title: '功能', templet: '<div>{{d.function}}</div>' }
                        , { field: 'hair', title: '毛发', templet: '<div>{{d.hair}}</div>' }
                        , { field: 'aniMalCategoryId', title: '宠物种类', templet: tplPetcategory }
                        , { field: 'operate', title: '操作', templet: tplOpera");
            WriteLiteral(@"te, width: 180, align: 'center' }
                    ]]
                    , skin: 'line'
                    , done: function (res, curr, count) {
                        //无论是异步请求数据，还是直接赋值数据，都会触发该回调。可以利用该回调做一些表格以外元素的渲染。
                        //如果是异步请求数据方式，res即为你接口返回的信息。
                        //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                        console.log(res);

                        //得到当前页码
                        console.log(curr);

                        //得到数据总量
                        console.log(count);
                    }
                });
            }
        };

        form.on('submit(component-form-demo1)', function (data) {
            console.log(data)
            layer.alert(JSON.stringify(data.field), {
                title: '最终的提交信息'
            })
            return false;
        });


        $('.layui-fluid .layui-btn').on('click', function () {
            var type = $(this).data('type');
            active");
            WriteLiteral("[type] ? active[type].call(this) : \'\';\r\n        });\r\n    });\r\n    </script>\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
