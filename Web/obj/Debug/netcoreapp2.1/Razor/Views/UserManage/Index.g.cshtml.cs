#pragma checksum "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\UserManage\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "457733d8cd7ac19f4fe1d11dbf43dcfa1926c046"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UserManage_Index), @"mvc.1.0.view", @"/Views/UserManage/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/UserManage/Index.cshtml", typeof(AspNetCore.Views_UserManage_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\_ViewImports.cshtml"
using Web;

#line default
#line hidden
#line 2 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\_ViewImports.cshtml"
using Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"457733d8cd7ac19f4fe1d11dbf43dcfa1926c046", @"/Views/UserManage/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"74b0619e1a302f0598271da1847e697c39d57b88", @"/Views/_ViewImports.cshtml")]
    public class Views_UserManage_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\Administrator\Desktop\NET Core学习\NetCoreEF7Test\Web\Views\UserManage\Index.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(29, 1717, true);
            WriteLiteral(@"
<title>我的客户</title>

<div class=""layui-card layadmin-header"">
    <div class=""layui-breadcrumb"" lay-filter=""breadcrumb"">
        <a lay-href="""">主页</a>
        <a><cite>客户管理</cite></a>
        <a><cite>我的客户</cite></a>
    </div>
</div>

<style>

</style>
<div class=""layui-fluid"" id=""LAY-myClient"">

    <div class=""layui-card"">
        <div class=""layui-tab-content"">
            <div class=""layui-btn-group demoTable lay-mb15"">
                <div class=""layui-form layui-card-header layuiadmin-card-header-auto""
                     lay-filter=""layadmin-useradmin-formlist"">
                    <div class=""layui-form-item"">
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">姓名</label>
                            <div class=""layui-input-block"">
                                <input type=""text"" name=""name"" placeholder=""请输入姓名"" autocomplete=""off""
                                       class=""layui-input"">
                        ");
            WriteLiteral(@"    </div>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">加入时间</label>
                            <div class=""layui-input-inline"">
                                <input type=""text"" class=""layui-input"" id=""test1"" placeholder="" 请选择创建时间 "">
                            </div>
                        </div>
                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">信用状况</label>
                            <div class=""layui-input-block"">
                                <select name=""creditStatus"">
                                    ");
            EndContext();
            BeginContext(1746, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d3ec2cff4d54fdcae966c73a7197f1c", async() => {
                BeginContext(1763, 3, true);
                WriteLiteral("请选择");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1775, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1813, 32, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d0979e6fac304f6987a1ed2065498d8f", async() => {
                BeginContext(1831, 5, true);
                WriteLiteral("无违约记录");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1845, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1883, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d1322a14836644169602fc1769386bab", async() => {
                BeginContext(1901, 11, true);
                WriteLiteral("2个月内违约少于90天");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1921, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(1959, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "89bafc2f1b4748508b695e06fbbd3c56", async() => {
                BeginContext(1977, 11, true);
                WriteLiteral("2个月内违约大于90天");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1997, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(2035, 31, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "08c936aae383423485824faac0a19ff4", async() => {
                BeginContext(2053, 4, true);
                WriteLiteral("严重违约");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2066, 430, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>

                        <div class=""layui-inline"">
                            <label class=""layui-form-label"">选择地区</label>
                            <div class=""layui-input-inline"">
                                <select name=""provid2"" id=""provid2"" lay-filter=""provid2"">
                                    ");
            EndContext();
            BeginContext(2496, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06e43c78d4e544fc9531d82bcdaa3c47", async() => {
                BeginContext(2513, 4, true);
                WriteLiteral("请选择省");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2526, 270, true);
            WriteLiteral(@"
                                </select>
                            </div>
                            <div class=""layui-input-inline"">
                                <select name=""cityid2"" id=""cityid2"" lay-filter=""cityid2"">
                                    ");
            EndContext();
            BeginContext(2796, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "72eae892227644408206c216754e631e", async() => {
                BeginContext(2813, 4, true);
                WriteLiteral("请选择市");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2826, 270, true);
            WriteLiteral(@"
                                </select>
                            </div>
                            <div class=""layui-input-inline"">
                                <select name=""xianid2"" id=""xianid2"" lay-filter=""xianid2"">
                                    ");
            EndContext();
            BeginContext(3096, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "473c82598ab94163946e61ecf2ee0bef", async() => {
                BeginContext(3113, 4, true);
                WriteLiteral("请选择县");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3126, 13237, true);
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>

                        <div class=""layui-inline"">
                            <button class=""layui-btn layuiadmin-btn-admin"" lay-submit lay-filter=""LAY-user-back-search"">
                                <i class=""layui-icon layui-icon-search layuiadmin-button-btn""></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class=""layui-card-body"">
                    <div style=""padding-bottom: 10px;"">
                        <button class=""layui-btn layui-btn-danger"" data-type=""batchdel"">
                            <i class=""layui-icon"">&#xe640;</i>删除
                        </button>
                        <button class=""layui-btn layui-btn-normal"" data-type=""add"">
                            <i class=""layui-icon"">&#xe654;</i>添加
                        </button>
                        <button");
            WriteLiteral(@" class=""layui-btn layui-btn-warm"" data-type=""output"">
                            <i class=""layui-icon"">&#xe6a6;</i>导出
                        </button>
                    </div>
                    <table id=""LAY-myClient-all"" lay-filter=""LAY-myClient-all""></table>
                </div>
            </div>

        </div>
    </div>

    <!--查看-->
    <script type=""text/html"" id=""viewTr"">
        <ul class=""viewInfo"">
            <li>
                <span>姓名：</span>{{d.name}}
            </li>
            <li>
                <span>电话：</span>{{d.phone}}
            </li>
            <li>
                <span>邮箱：</span>{{d.email}}
            </li>
            <li>
                <span>性别：</span>{{d.sexy}}
            </li>
            <li>
                <span>地区：</span>{{d.region}}
            </li>
            <li>
                <span>信用状况：</span>{{d.creditStatus}}
            </li>
            <li>
                <span>加入时间：</span>{{layui.util.timeAgo(d.joinTime)}}");
            WriteLiteral(@"
            </li>
            <li>
                <span>贷款意图：</span>{{d.status ? ""有"" :"" 无""}}
            </li>
        </ul>
    </script>


    <!--私有样式-->
    <style>
        .viewInfo {
            padding: 30px;
            font-size: 14px;
            color: #666;
        }

            .viewInfo li {
                margin-bottom: 15px;
            }

                .viewInfo li span {
                    display: inline-block;
                    width: 15%;
                    text-align: right;
                    margin-right: 15px;
                    font-weight: bold;
                }
    </style>
    <script>
        layui.use(['admin', 'table', 'util', 'layer', 'form', 'laydate', 'laytpl', 'cityselect'], function () {
            var $ = layui.$
                , admin = layui.admin
                , element = layui.element
                , layer = layui.layer
                , table = layui.table
                , form = layui.form
                , la");
            WriteLiteral(@"ydate = layui.laydate
                , cityselect = layui.cityselect
                , laytpl = layui.laytpl;

            //日期范围
            laydate.render({
                elem: '#test1'
                , range: true
            });
            cityselect.render({
                elem: [""#provid2"", ""#cityid2"", ""#xianid2""],
                elembox: 'layadmin-useradmin-formlist',
                url: './content/json/select/address.json',
                setValues: [""70"", ""7002"", ""700212""]
            });
            element.render();
            form.render(null, 'layadmin-useradmin-formlist');
            //缩略图模板
            var tplImg = function (d) {
                console.log(d);
                return '<img src=""' + d.thumbnail + '"" style=""height: 80px"" >';
            };
            //是否启用模板
            var tplStatus = function (d) {
                console.log(d.UserState);
                if (d.UserState > 0) {
                    return '<input type=""checkbox"" name=""statu");
            WriteLiteral(@"s"" lay-skin=""switch"" lay-text=""正常|禁用"" checked=""false"">';
                }
                else {
                    return '<input type=""checkbox"" name=""status"" lay-filter=""UserState"" lay-skin=""switch"" lay-text=""正常|禁用"" checked=""true"">';
                }
            };


            // 操作内容模板
            var tplOperate = function (d) {
                return '<div class=""opetate"">' +
                    '<button class=""layui-btn layui-btn-primary layui-btn-xs"" lay-event=""detail"" lay-filter=""test1"">查看</button>' +
                    '<button class=""layui-btn layui-btn-xs""  lay-event=""edit"">编辑</button>' +
                    '<button class=""layui-btn layui-btn-danger layui-btn-xs""  lay-event=""del"">删除</button>' +
                    '</div>';

            };


            //全部消息
            table.render({
                elem: '#LAY-myClient-all'
                , url: '/UserManage/GetAllUserInfo' //模拟接口
                , cellMinWidth: 60 //全局定义常规单元格的最小宽度
                , page: true //");
            WriteLiteral(@" 开启分页
                , cols: [[ // 表头
                    { type: 'checkbox' }
                    // , {type: 'numbers', title: '#'}
                    , { field: 'userName', title: '姓名', edit: 'text' }
                    , { field: 'registerPhone', title: '电话', edit: 'text' }
                    , { field: 'sex', title: '性别', edit: 'text' }
                    , { field: 'userBoQiMoney', title: '波奇豆', edit: 'text' }
                    , { field: 'provinceName', title: '所在省', edit: 'text' }
                    , { field: 'cityName', title: '所在市', edit: 'text' }
                    , { field: 'areaName', title: '所在区/县', edit: 'text' }
                    , { field: 'createTime', title: '加入时间' }
                    , { field: 'userState', title: '用户状态', templet: tplStatus }
                    , { field: 'operate', title: '操作', templet: tplOperate, width: 180, align: 'center'}
                ]]
                , skin: 'line'
                , done: function (res, curr, count) {
          ");
            WriteLiteral(@"          //无论是异步请求数据，还是直接赋值数据，都会触发该回调。可以利用该回调做一些表格以外元素的渲染。
                    //如果是异步请求数据方式，res即为你接口返回的信息。
                    //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                    console.log(res);

                    //得到当前页码
                    console.log(curr);

                    //得到数据总量
                    console.log(count);
                }
            });

            form.on('switch(UserState)', function (data) {
                var tipText = '确定禁用当前用户？';
                if (data.elem.checked) {
                    tipText = '确定启用当前用户？';
                }
                layer.confirm(tipText, {
                    icon: 3,
                    title: '系统提示',
                    cancel: function (index) {
                        data.elem.checked = !data.elem.checked;
                        form.render();
                        layer.close(index);
                    }
                }, function (index) {
                    layer.clo");
            WriteLiteral(@"se(index);
                }, function (index) {
                    data.elem.checked = !data.elem.checked;
                    form.render();
                    layer.close(index);
                });
            });

            //监听单元格编辑——方法二
            table.on('edit(LAY-myClient-all)', function (obj) {
                var value = obj.value //得到修改后的值
                    , data = obj.data //得到所在行所有键值
                    , field = obj.field; //得到字段
                layer.msg('[ID: ' + data.id + '] ' + field + ' 字段更改为：' + value);
            });

            table.on('tool(LAY-myClient-all)', function (obj) {
                layui.updateitem = function (item) {
                    obj.update(JSON.parse(item));
                };
                var data = obj.data;
                if (obj.event === 'detail') {
                    // layer.msg('ID：'+ data.id + ' 的查看操作');
                    layer.open({
                        title: '查看',
                        type: 1,
         ");
            WriteLiteral(@"               //skin: 'layui-layer-rim',
                        shadeClose: true,
                        area: admin.screen() < 2 ? ['80%', '300px'] : ['700px', '350px'],
                        content: '<div id=""view""></div>'
                    });
                    console.log(obj)
                    console.log(JSON.stringify(data))
                    console.log(data.operate)


                    var getTpl = $(""#viewTr"")[0].innerHTML, view = $(""#view"")[0];
                    laytpl(getTpl).render(data, function (html) {
                        view.innerHTML = html;
                    });
                }
                else if (obj.event === 'del') {
                    layer.confirm('真的删除行么', function (index) {
                        obj.del();
                        layer.close(index);
                    });
                }
                else if (obj.event === 'edit') { // 编辑方法一
                    layer.open({
                        type: 2,
             ");
            WriteLiteral(@"           area: ['900px', '700px'],
                        fixed: false,
                        maxmin: true,
                        content: '/UserManage/EditUser?userid=1'
                    }); // 打开弹窗
                }
                else if (obj.event === 'setSign') { // 编辑方法三
                    layer.prompt({
                        formType: 2
                        , title: '编辑 [' + data.id + '] 的所属平台'
                        , value: data.platform
                    }, function (value, index) {
                        layer.close(index);

                        //这里一般是发送修改的Ajax请求

                        //同步更新表格和缓存对应的值
                        obj.update({
                            platform: value
                        });
                    });
                }
            }); // 操作

            var active = {
                batchdel: function(){
                    var checkStatus = table.checkStatus('LAY-myClient-all')
                        ,checkData ");
            WriteLiteral(@"= checkStatus.data; //得到选中的数据

                    if(checkData.length === 0){
                        return layer.msg('请选择数据');
                    }

                    layer.prompt({
                        formType: 1
                        ,title: '敏感操作，请验证口令'
                    }, function(value, index){
                        layer.close(index);

                        layer.confirm('确定删除吗？', function(index) {

                            //执行 Ajax 后重载
                            /*
                             admin.req({
                             url: 'xxx'
                             //,……
                             });
                             */
                            table.reload('LAY-user-manage');
                            layer.msg('已删除');
                        });
                    });
                },
                getCheckData: function () { //获取选中数据
                    var checkStatus = table.checkStatus('LAY-myClient-all')
       ");
            WriteLiteral(@"                 , data = checkStatus.data;
                    active.getId(data)

                    layer.alert(JSON.stringify(data));
                }
                , getId: function (data) {
                    var idArr = [];
                    for (var i = 0; i < data.length; i++) {
                        console.log(data[i].id)
                        idArr.push(data[i].id)
                    }
                    console.log(idArr)
                }
                , getCheckLength: function () { //获取选中数目
                    var checkStatus = table.checkStatus('LAY-myClient-all')
                        , data = checkStatus.data;
                    layer.msg('选中了：' + data.length + ' 个');
                }
                , isAll: function () { //验证是否全选
                    var checkStatus = table.checkStatus('LAY-myClient-all');
                    layer.msg(checkStatus.isAll ? '全选' : '未全选')
                }
                , add: function () { // 增加一条列表
               ");
            WriteLiteral(@"     layer.open({
                        title: '新增',
                        type: 2,
                        shadeClose: false,
                        area: admin.screen() < 2 ? ['80%', '300px'] : ['800px', '600px'],
                        content: layui.setter.base + 'views/clientManagement/myClient/add.html'
                    });
                }

            };


//        form.render(null, 'operate-form-group');
            form.on('submit(component-form-demo1)', function (data) {
                console.log(data)
                layer.alert(JSON.stringify(data.field), {
                    title: '最终的提交信息'
                })
                return false;
            });


            $('.layui-fluid .layui-btn').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });


        });
    </script>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
